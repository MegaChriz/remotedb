<?php

/**
 * @file
 * Enables registration and authentication via remote database.
 */

// ---------------------------------------------------------------------------
// DRUPAL HOOKS
// ---------------------------------------------------------------------------

/**
 * Implements hook_hook_info().
 *
 * Declares available hooks invoked by this module.
 *
 * @return array
 *   A list of hooks.
 */
function remotedb_hook_info() {
  $hooks = [
    'remotedb_authentication',
  ];
  $return = [];
  foreach ($hooks as $hook) {
    $return[$hook] = [
      'group' => 'remotedb',
    ];
  }
  return $return;
}

// ---------------------------------------------------------------------------
// CTOOLS HOOKS
// + function for finding the plugins.
// ---------------------------------------------------------------------------

/**
 * Implements hook_ctools_plugin_api().
 *
 * Report that this module works with Feeds.
 *
 * @return array
 */
function remotedb_ctools_plugin_api($owner, $api) {
  if ($owner == 'feeds' && $api == 'plugins') {
    return ['version' => 1];
  }
  if ($owner == 'remotedb' && $api == 'authentication') {
    return [
      'version' => 3,
    ];
  }
}

/**
 * Implements hook_ctools_plugin_type().
 */
function remotedb_ctools_plugin_type() {
  return [
    'authentication' => [
      'use hooks' => TRUE,
    ],
  ];
}

/**
 * Returns an array of plugins.
 */
function remotedb_discover_plugins() {
  // @FIXME
  // Most CTools APIs have been moved into core.
  //
  // @see https://www.drupal.org/node/2164623
  // ctools_include('plugins');
  ctools_plugin_api_include('remotedb', 'authentication', 3, 3);
  $plugins = \Drupal::service('plugin.manager.remotedb.authentication')->getDefinitions();
  \Drupal::moduleHandler()->alter('authentication', $plugins);
  return $plugins;
}

// ---------------------------------------------------------------------------
// FEEDS HOOKS
// ---------------------------------------------------------------------------

/**
 * Implements hook_feeds_plugins().
 */
function remotedb_feeds_plugins() {
  $info = [];
  $info['RemotedbFetcher'] = [
    'name' => 'Remote database fetcher',
    'description' => 'Fetches data from the remote database via XML-RPC.',
    'handler' => [
      'parent' => 'FeedsFetcher',
      'class' => 'Drupal\\remotedb\\Plugin\\Feeds\\RemotedbFetcher',
      'file' => 'RemotedbFetcher.php',
      'path' => drupal_get_path('module', 'remotedb') . '/lib/Plugin/Feeds',
    ],
  ];
  return $info;
}

// ---------------------------------------------------------------------------
// ACCESS CALLBACKS
// ---------------------------------------------------------------------------

/**
 * Access callback for remotedb entity.
 */
function remotedb_access($op, $entity, $account) {
  return $account->hasPermission('remotedb.administer');
}

// ---------------------------------------------------------------------------
// THEMING
// ---------------------------------------------------------------------------

/**
 * Implements hook_theme().
 */
function remotedb_theme() {
  return [
    'authentication_methods_order' => [
      'render element' => 'element',
      'file' => 'remotedb.admin.inc',
    ],
  ];
}
