<?php

/**
 * @file
 * Enables registration and authentication via remote database.
 */

// ---------------------------------------------------------------------------
// DRUPAL HOOKS
// ---------------------------------------------------------------------------

/**
 * Implements hook_menu().
 */
function remotedb_menu() {
  $items = array();

  $items['admin/config/services/remotedb/test'] = array(
    'title' => 'Test',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('remotedb_test_form'),
    'access arguments' => array('remotedb.administer'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'remotedb.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_hook_info().
 *
 * Declares available hooks invoked by this module.
 *
 * @return array
 *   A list of hooks.
 */
function remotedb_hook_info() {
  $hooks = array(
    'remotedb_authentication',
  );
  $return = array();
  foreach ($hooks as $hook) {
    $return[$hook] = array(
      'group' => 'remotedb',
    );
  }
  return $return;
}

/**
 * Implements hook_permission().
 */
function remotedb_permission() {
  return array(
    'remotedb.administer' => array(
      'title' => t('Administer remote databases'),
    ),
  );
}

/**
 * Loads a remote database.
 *
 * @param $id
 *   The ID of the remote database to load.
 *
 * @return Drupal\remotedb\Entity\RemotedbInterface
 *   An instance of RemotedbInterface.
 */
function remotedb_load($id) {
  entity_object_load($id, 'remotedb');
}

// ---------------------------------------------------------------------------
// ENTITY API HOOKS
// ---------------------------------------------------------------------------

/**
 * Implements hook_entity_info().
 */
function remotedb_entity_info() {
  $return = array(
    'remotedb' => array(
      'label' => t('Remote database'),
      'entity class' => 'Drupal\\remotedb\\Entity\\Remotedb',
      'controller class' => 'Drupal\\remotedb\\Controller\\RemotedbController',
      'base table' => 'remotedb',
      'fieldable' => FALSE,
      'entity keys' => array(
        'id' => 'name',
        'label' => 'label',
      ),
      'exportable' => TRUE,
      'admin ui' => array(
        'path' => 'admin/config/services/remotedb',
        'file' => 'remotedb.admin.inc',
        'controller class' => 'EntityDefaultUIController',
      ),
      'uri callback' => 'entity_class_uri',
      'module' => 'remotedb',
      'access callback' => 'remotedb_access',
    ),
  );

  // Entity Operations API.
  if (\Drupal::moduleHandler()->moduleExists('entity_operations')) {
    $return['remotedb']['operations ui'] = array(
      'path' => 'admin/config/services/remotedb/manage',
    );
  }

  return $return;
}

// ---------------------------------------------------------------------------
// CTOOLS HOOKS
// + function for finding the plugins.
// ---------------------------------------------------------------------------

/**
 * Implements hook_ctools_plugin_api().
 *
 * Report that this module works with Feeds.
 *
 * @return array
 */
function remotedb_ctools_plugin_api($owner, $api) {
  if ($owner == 'feeds' && $api == 'plugins') {
    return array('version' => 1);
  }
  if ($owner == 'remotedb' && $api == 'authentication') {
    return array(
      'version' => 3,
    );
  }
}

/**
 * Implements hook_ctools_plugin_type().
 */
function remotedb_ctools_plugin_type() {
  return array(
    'authentication' => array(
      'use hooks' => TRUE,
    ),
  );
}

/**
 * Returns an array of plugins.
 */
function remotedb_discover_plugins() {
  // @FIXME
// Most CTools APIs have been moved into core.
// 
// @see https://www.drupal.org/node/2164623
// ctools_include('plugins');

  ctools_plugin_api_include('remotedb', 'authentication', 3, 3);
  $plugins = \Drupal::service('plugin.manager.remotedb.authentication')->getDefinitions();
  \Drupal::moduleHandler()->alter('authentication', $plugins);
  return $plugins;
}

// ---------------------------------------------------------------------------
// FEEDS HOOKS
// ---------------------------------------------------------------------------

/**
 * Implements hook_feeds_plugins().
 */
function remotedb_feeds_plugins() {
  $info = array();
  $info['RemotedbFetcher'] = array(
    'name' => 'Remote database fetcher',
    'description' => 'Fetches data from the remote database via XML-RPC.',
    'handler' => array(
      'parent' => 'FeedsFetcher',
      'class' => 'Drupal\\remotedb\\Plugin\\Feeds\\RemotedbFetcher',
      'file' => 'RemotedbFetcher.php',
      'path' => drupal_get_path('module', 'remotedb') . '/lib/Plugin/Feeds',
    ),
  );
  return $info;
}

// ---------------------------------------------------------------------------
// ACCESS CALLBACKS
// ---------------------------------------------------------------------------

/**
 * Access callback for remotedb entity.
 */
function remotedb_access($op, $entity, $account) {
  return $account->hasPermission('remotedb.administer');
}

// ---------------------------------------------------------------------------
// THEMING
// ---------------------------------------------------------------------------

/**
 * Implements hook_theme().
 */
function remotedb_theme() {
  return array(
    'authentication_methods_order' => array(
      'render element' => 'element',
      'file' => 'remotedb.admin.inc',
    ),
  );
}
