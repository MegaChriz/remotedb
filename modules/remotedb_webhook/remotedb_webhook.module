<?php

/**
 * @file
 * Remote database Webhook module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\remotedb_webhook\Form\WebhookDisable;
use Drupal\remotedb_webhook\Form\WebhookEnable;

/**
 * Implements hook_entity_type_build().
 */
function remotedb_webhook_entity_type_build(array &$entity_types) {
  if (!isset($entity_types['remotedb'])) {
    return;
  }

  $entity_types['remotedb']
    ->setFormClass('webhook_enable', WebhookEnable::class)
    ->setFormClass('webhook_disable', WebhookDisable::class);
}

/**
 * Implements hook_ENTITY_TYPE_access() for 'remotedb'.
 */
function remotedb_webhook_remotedb_access(EntityInterface $remotedb, $operation, AccountInterface $account) {
  $has_perm = $account->hasPermission('remotedb.administer');

  switch ($operation) {
    case 'webhook_enable':
      return AccessResult::allowedIf($has_perm && !\Drupal::service('remotedb_webhook.webhook')->exists($remotedb));

    case 'webhook_disable':
      return AccessResult::allowedIf($has_perm && \Drupal::service('remotedb_webhook.webhook')->exists($remotedb));
  }

  // No opinion.
  return AccessResult::neutral();
}
